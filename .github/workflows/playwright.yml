name: Playwright Tests
on: [deployment_status]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success'
    
    strategy:
      matrix:
        shard: ["1/3", "2/3", "3/3"]
    steps:
    - uses: actions/checkout@v2
    - id: nvm
      name: Read .nvmrc
      run: echo "::set-output name=NVMRC;$(cat .nvmrc)"
    - uses: actions/setup-node@v2
      with:
        node-version: '${{ steps.nvm.outputs.NVMRC }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Install packages
      run: yarn
    - name: Get installed Playwright version
      id: playwright-version
      run: echo "::set-output name=version::$(yarn why --json @playwright/test | grep -h 'workspace:.' | jq --raw-output '.children[].locator' | sed -e 's/@playwright\/test@.*://')"
    - uses: actions/cache@v3
      id: playwright-cache
      with:
        path: '~/.cache/ms-playwright'
        key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
        restore-keys: |
            ${{ runner.os }}-playwright-
    - name: Install Playwright's dependencies
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: yarn test
      env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}
          